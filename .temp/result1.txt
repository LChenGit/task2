# "After testing 1000 times, we found water boils at 100 degree"

Annotate: {'sentences': [{'index': 0, 'parse': '(ROOT\n  (S\n    (PP (IN After)\n      (S\n        (VP (VBG testing)\n          (NP (CD 1000) (NNS times)))))\n    (, ,)\n    (NP (PRP we))\n    (VP (VBD found)\n      (SBAR\n        (S\n          (NP (NN water))\n          (VP (VBZ boils)\n            (PP (IN at)\n              (NP (CD 100) (NN degree)))))))))', 'basicDependencies': [{'dep': 'ROOT', 'governor': 0, 'governorGloss': 'ROOT', 'dependent': 7, 'dependentGloss': 'found'}, {'dep': 'mark', 'governor': 2, 'governorGloss': 'testing', 'dependent': 1, 'dependentGloss': 'After'}, {'dep': 'advcl', 'governor': 7, 'governorGloss': 'found', 'dependent': 2, 'dependentGloss': 'testing'}, {'dep': 'nummod', 'governor': 4, 'governorGloss': 'times', 'dependent': 3, 'dependentGloss': '1000'}, {'dep': 'dobj', 'governor': 2, 'governorGloss': 'testing', 'dependent': 4, 'dependentGloss': 'times'}, {'dep': 'punct', 'governor': 7, 'governorGloss': 'found', 'dependent': 5, 'dependentGloss': ','}, {'dep': 'nsubj', 'governor': 7, 'governorGloss': 'found', 'dependent': 6, 'dependentGloss': 'we'}, {'dep': 'nsubj', 'governor': 9, 'governorGloss': 'boils', 'dependent': 8, 'dependentGloss': 'water'}, {'dep': 'ccomp', 'governor': 7, 'governorGloss': 'found', 'dependent': 9, 'dependentGloss': 'boils'}, {'dep': 'case', 'governor': 12, 'governorGloss': 'degree', 'dependent': 10, 'dependentGloss': 'at'}, {'dep': 'nummod', 'governor': 12, 'governorGloss': 'degree', 'dependent': 11, 'dependentGloss': '100'}, {'dep': 'nmod', 'governor': 9, 'governorGloss': 'boils', 'dependent': 12, 'dependentGloss': 'degree'}], 'enhancedDependencies': [{'dep': 'ROOT', 'governor': 0, 'governorGloss': 'ROOT', 'dependent': 7, 'dependentGloss': 'found'}, {'dep': 'mark', 'governor': 2, 'governorGloss': 'testing', 'dependent': 1, 'dependentGloss': 'After'}, {'dep': 'advcl:after', 'governor': 7, 'governorGloss': 'found', 'dependent': 2, 'dependentGloss': 'testing'}, {'dep': 'nummod', 'governor': 4, 'governorGloss': 'times', 'dependent': 3, 'dependentGloss': '1000'}, {'dep': 'dobj', 'governor': 2, 'governorGloss': 'testing', 'dependent': 4, 'dependentGloss': 'times'}, {'dep': 'punct', 'governor': 7, 'governorGloss': 'found', 'dependent': 5, 'dependentGloss': ','}, {'dep': 'nsubj', 'governor': 7, 'governorGloss': 'found', 'dependent': 6, 'dependentGloss': 'we'}, {'dep': 'nsubj', 'governor': 9, 'governorGloss': 'boils', 'dependent': 8, 'dependentGloss': 'water'}, {'dep': 'ccomp', 'governor': 7, 'governorGloss': 'found', 'dependent': 9, 'dependentGloss': 'boils'}, {'dep': 'case', 'governor': 12, 'governorGloss': 'degree', 'dependent': 10, 'dependentGloss': 'at'}, {'dep': 'nummod', 'governor': 12, 'governorGloss': 'degree', 'dependent': 11, 'dependentGloss': '100'}, {'dep': 'nmod:at', 'governor': 9, 'governorGloss': 'boils', 'dependent': 12, 'dependentGloss': 'degree'}], 'enhancedPlusPlusDependencies': [{'dep': 'ROOT', 'governor': 0, 'governorGloss': 'ROOT', 'dependent': 7, 'dependentGloss': 'found'}, {'dep': 'mark', 'governor': 2, 'governorGloss': 'testing', 'dependent': 1, 'dependentGloss': 'After'}, {'dep': 'advcl:after', 'governor': 7, 'governorGloss': 'found', 'dependent': 2, 'dependentGloss': 'testing'}, {'dep': 'nummod', 'governor': 4, 'governorGloss': 'times', 'dependent': 3, 'dependentGloss': '1000'}, {'dep': 'dobj', 'governor': 2, 'governorGloss': 'testing', 'dependent': 4, 'dependentGloss': 'times'}, {'dep': 'punct', 'governor': 7, 'governorGloss': 'found', 'dependent': 5, 'dependentGloss': ','}, {'dep': 'nsubj', 'governor': 7, 'governorGloss': 'found', 'dependent': 6, 'dependentGloss': 'we'}, {'dep': 'nsubj', 'governor': 9, 'governorGloss': 'boils', 'dependent': 8, 'dependentGloss': 'water'}, {'dep': 'ccomp', 'governor': 7, 'governorGloss': 'found', 'dependent': 9, 'dependentGloss': 'boils'}, {'dep': 'case', 'governor': 12, 'governorGloss': 'degree', 'dependent': 10, 'dependentGloss': 'at'}, {'dep': 'nummod', 'governor': 12, 'governorGloss': 'degree', 'dependent': 11, 'dependentGloss': '100'}, {'dep': 'nmod:at', 'governor': 9, 'governorGloss': 'boils', 'dependent': 12, 'dependentGloss': 'degree'}], 'entitymentions': [{'docTokenBegin': 2, 'docTokenEnd': 3, 'tokenBegin': 2, 'tokenEnd': 3, 'text': '1000', 'characterOffsetBegin': 14, 'characterOffsetEnd': 18, 'ner': 'NUMBER', 'normalizedNER': '1000.0'}, {'docTokenBegin': 10, 'docTokenEnd': 11, 'tokenBegin': 10, 'tokenEnd': 11, 'text': '100', 'characterOffsetBegin': 50, 'characterOffsetEnd': 53, 'ner': 'NUMBER', 'normalizedNER': '100.0'}], 'tokens': [{'index': 1, 'word': 'After', 'originalText': 'After', 'lemma': 'after', 'characterOffsetBegin': 0, 'characterOffsetEnd': 5, 'pos': 'IN', 'ner': 'O', 'speaker': 'PER0', 'before': '', 'after': ' '}, {'index': 2, 'word': 'testing', 'originalText': 'testing', 'lemma': 'test', 'characterOffsetBegin': 6, 'characterOffsetEnd': 13, 'pos': 'VBG', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 3, 'word': '1000', 'originalText': '1000', 'lemma': '1000', 'characterOffsetBegin': 14, 'characterOffsetEnd': 18, 'pos': 'CD', 'ner': 'NUMBER', 'normalizedNER': '1000.0', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 4, 'word': 'times', 'originalText': 'times', 'lemma': 'time', 'characterOffsetBegin': 19, 'characterOffsetEnd': 24, 'pos': 'NNS', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ''}, {'index': 5, 'word': ',', 'originalText': ',', 'lemma': ',', 'characterOffsetBegin': 24, 'characterOffsetEnd': 25, 'pos': ',', 'ner': 'O', 'speaker': 'PER0', 'before': '', 'after': ' '}, {'index': 6, 'word': 'we', 'originalText': 'we', 'lemma': 'we', 'characterOffsetBegin': 26, 'characterOffsetEnd': 28, 'pos': 'PRP', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 7, 'word': 'found', 'originalText': 'found', 'lemma': 'find', 'characterOffsetBegin': 29, 'characterOffsetEnd': 34, 'pos': 'VBD', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 8, 'word': 'water', 'originalText': 'water', 'lemma': 'water', 'characterOffsetBegin': 35, 'characterOffsetEnd': 40, 'pos': 'NN', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 9, 'word': 'boils', 'originalText': 'boils', 'lemma': 'boil', 'characterOffsetBegin': 41, 'characterOffsetEnd': 46, 'pos': 'VBZ', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 10, 'word': 'at', 'originalText': 'at', 'lemma': 'at', 'characterOffsetBegin': 47, 'characterOffsetEnd': 49, 'pos': 'IN', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 11, 'word': '100', 'originalText': '100', 'lemma': '100', 'characterOffsetBegin': 50, 'characterOffsetEnd': 53, 'pos': 'CD', 'ner': 'NUMBER', 'normalizedNER': '100.0', 'speaker': 'PER0', 'before': ' ', 'after': ' '}, {'index': 12, 'word': 'degree', 'originalText': 'degree', 'lemma': 'degree', 'characterOffsetBegin': 54, 'characterOffsetEnd': 60, 'pos': 'NN', 'ner': 'O', 'speaker': 'PER0', 'before': ' ', 'after': ''}]}], 'corefs': {'1': [{'id': 1, 'text': '1000', 'type': 'PROPER', 'number': 'SINGULAR', 'gender': 'UNKNOWN', 'animacy': 'INANIMATE', 'startIndex': 3, 'endIndex': 4, 'headIndex': 3, 'sentNum': 1, 'position': [1, 2], 'isRepresentativeMention': True}], '2': [{'id': 2, 'text': '100', 'type': 'PROPER', 'number': 'SINGULAR', 'gender': 'UNKNOWN', 'animacy': 'INANIMATE', 'startIndex': 11, 'endIndex': 12, 'headIndex': 11, 'sentNum': 1, 'position': [1, 5], 'isRepresentativeMention': True}], '3': [{'id': 3, 'text': '1000 times', 'type': 'NOMINAL', 'number': 'PLURAL', 'gender': 'UNKNOWN', 'animacy': 'INANIMATE', 'startIndex': 3, 'endIndex': 5, 'headIndex': 4, 'sentNum': 1, 'position': [1, 1], 'isRepresentativeMention': True}], '4': [{'id': 4, 'text': 'we', 'type': 'PRONOMINAL', 'number': 'PLURAL', 'gender': 'UNKNOWN', 'animacy': 'ANIMATE', 'startIndex': 6, 'endIndex': 7, 'headIndex': 6, 'sentNum': 1, 'position': [1, 3], 'isRepresentativeMention': True}], '5': [{'id': 5, 'text': '100 degree', 'type': 'NOMINAL', 'number': 'SINGULAR', 'gender': 'UNKNOWN', 'animacy': 'INANIMATE', 'startIndex': 11, 'endIndex': 13, 'headIndex': 12, 'sentNum': 1, 'position': [1, 4], 'isRepresentativeMention': True}]}}
POS: [('After', 'IN'), ('testing', 'VBG'), ('1000', 'CD'), ('times', 'NNS'), (',', ','), ('we', 'PRP'), ('found', 'VBD'), ('water', 'NN'), ('boils', 'VBZ'), ('at', 'IN'), ('100', 'CD'), ('degree', 'NN')]
Tokens: ['After', 'testing', '1000', 'times', ',', 'we', 'found', 'water', 'boils', 'at', '100', 'degree']
NER: [('After', 'O'), ('testing', 'O'), ('1000', 'NUMBER'), ('times', 'O'), (',', 'O'), ('we', 'O'), ('found', 'O'), ('water', 'O'), ('boils', 'O'), ('at', 'O'), ('100', 'NUMBER'), ('degree', 'O')]
Parse: (ROOT
  (S
    (PP (IN After)
      (S
        (VP (VBG testing)
          (NP (CD 1000) (NNS times)))))
    (, ,)
    (NP (PRP we))
    (VP (VBD found)
      (SBAR
        (S
          (NP (NN water))
          (VP (VBZ boils)
            (PP (IN at)
              (NP (CD 100) (NN degree)))))))))
Dep Parse: [('ROOT', 0, 7), ('mark', 2, 1), ('advcl', 7, 2), ('nummod', 4, 3), ('dobj', 2, 4), ('punct', 7, 5), ('nsubj', 7, 6), ('nsubj', 9, 8), ('ccomp', 7, 9), ('case', 12, 10), ('nummod', 12, 11), ('nmod', 9, 12)]